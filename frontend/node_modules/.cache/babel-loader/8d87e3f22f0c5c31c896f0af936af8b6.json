{"ast":null,"code":"import _defineProperty from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Node JS React Projects\\\\Airbnb-Full-Stack-Replica-master\\\\frontend\\\\src\\\\components\\\\edit-profile\\\\EditProfile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nvar CreateProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProfile, _Component);\n\n  function CreateProfile(props) {\n    var _this;\n\n    _classCallCheck(this, CreateProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateProfile).call(this, props));\n    _this.state = {\n      displaySocialInputs: false,\n      handle: '',\n      phonenumber: '',\n      city: '',\n      country: '',\n      gender: '',\n      company: '',\n      school: '',\n      hometown: '',\n      languages: '',\n      about: '',\n      //   ID:'',\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CreateProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.profile.profile) {\n        var profile = nextProps.profile.profile; // Bring skills array back to CSV\n        //const skillsCSV = profile.skills.join(',');\n        // If profile field doesnt exist, make empty string\n\n        profile.gender = !isEmpty(profile.gender) ? profile.gender : '';\n        profile.phonenumber = !isEmpty(profile.phonenumber) ? profile.phonenumber : '';\n        profile.city = !isEmpty(profile.city) ? profile.city : '';\n        profile.about = !isEmpty(profile.about) ? profile.about : '';\n        profile.country = !isEmpty(profile.country) ? profile.country : '';\n        profile.company = !isEmpty(profile.company) ? profile.company : '';\n        profile.languages = !isEmpty(profile.languages) ? profile.languages : '';\n        profile.hometown = !isEmpty(profile.hometown) ? profile.hometown : ''; // Set component fields state\n\n        this.setState({\n          gender: profile.gender,\n          phonenumber: profile.phonenumber,\n          city: profile.city,\n          about: profile.about,\n          country: profile.country,\n          company: profile.company,\n          languages: profile.languages,\n          hometown: profile.hometown\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var profileData = {\n        handle: this.state.handle,\n        phonenumber: this.state.phonenumber,\n        city: this.state.city,\n        country: this.state.country,\n        gender: this.state.gender,\n        company: this.state.company,\n        school: this.state.school,\n        hometown: this.state.hometown,\n        languages: this.state.languages,\n        about: this.state.about //   ID:this.state.ID\n\n      };\n      this.props.createProfile(profileData, this.props.history);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors; // Select options for gender\n\n      var options = [{\n        label: '* Select Gender',\n        value: 0\n      }, {\n        label: 'Male',\n        value: 'Male'\n      }, {\n        label: 'Female',\n        value: 'Female'\n      }, {\n        label: 'Other',\n        value: 'Other'\n      }];\n      return React.createElement(\"div\", {\n        className: \"create-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/dashboard\",\n        className: \"btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Back to Dashboard\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"display-8 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Edit Your Profile\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Update information about your profile\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(SelectListGroup, {\n        placeholder: \"Gender\",\n        name: \"gender\",\n        value: this.state.gender,\n        onChange: this.onChange,\n        options: options,\n        error: errors.gender,\n        info: \"Please Select your gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Phone Number\",\n        name: \"phonenumber\",\n        value: this.state.phonenumber,\n        onChange: this.onChange,\n        error: errors.phonenumber,\n        info: \"Please enter your active phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"City\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.onChange,\n        error: errors.city,\n        info: \"City or city & state suggested (eg. Boston, MA)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Country\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.onChange,\n        error: errors.country,\n        info: \"Enter the country (eg. USA, India)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"* Languages\",\n        name: \"languages\",\n        value: this.state.languages,\n        onChange: this.onChange,\n        error: errors.languages,\n        info: \"Please use comma separated values (eg. English, French, Spanish, Hindi)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Company\",\n        name: \"company\",\n        value: this.state.company,\n        onChange: this.onChange,\n        error: errors.company,\n        info: \"Enter your company or profession name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Short Bio\",\n        name: \"about\",\n        value: this.state.about,\n        onChange: this.onChange,\n        error: errors.about,\n        info: \"Tell us a little about yourself\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return CreateProfile;\n}(Component);\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createProfile: createProfile,\n  getCurrentProfile: getCurrentProfile\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["D:\\Node JS React Projects\\Airbnb-Full-Stack-Replica-master\\frontend\\src\\components\\edit-profile\\EditProfile.js"],"names":["React","Component","connect","Link","withRouter","PropTypes","TextFieldGroup","TextAreaFieldGroup","SelectListGroup","createProfile","getCurrentProfile","isEmpty","CreateProfile","props","state","displaySocialInputs","handle","phonenumber","city","country","gender","company","school","hometown","languages","about","errors","onChange","bind","onSubmit","nextProps","profile","setState","e","preventDefault","profileData","history","target","name","value","options","label","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport { createProfile,getCurrentProfile} from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nclass CreateProfile extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      displaySocialInputs: false,\n      handle:'',\n      phonenumber: '',\n      city: '',\n      country: '',\n      gender: '',\n      company: '',\n      school: '',\n      hometown: '',\n      languages: '',\n      about: '',\n    //   ID:'',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    \n  }\n  componentDidMount(){\n      this.props.getCurrentProfile();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.profile.profile) {\n        const profile = nextProps.profile.profile;\n  \n        // Bring skills array back to CSV\n        //const skillsCSV = profile.skills.join(',');\n  \n        // If profile field doesnt exist, make empty string\n        profile.gender = !isEmpty(profile.gender) ? profile.gender : '';\n        profile.phonenumber = !isEmpty(profile.phonenumber) ? profile.phonenumber : '';\n        profile.city = !isEmpty(profile.city) ? profile.city : '';\n        profile.about = !isEmpty(profile.about) ? profile.about : '';\n        profile.country = !isEmpty(profile.country) ? profile.country : '';\n        profile.company = !isEmpty(profile.company) ? profile.company : '';\n        profile.languages = !isEmpty(profile.languages) ? profile.languages : '';\n        profile.hometown = !isEmpty(profile.hometown) ? profile.hometown : '';\n  \n        // Set component fields state\n        this.setState({\n          gender: profile.gender,\n          phonenumber: profile.phonenumber,\n          city: profile.city,\n          about: profile.about,\n          country: profile.country,\n          company: profile.company,\n          languages: profile.languages,\n          hometown: profile.hometown\n        });\n      }\n}\n\n  onSubmit(e) {\n    e.preventDefault();\n    \n    const profileData = {\n      handle: this.state.handle,\n      phonenumber: this.state.phonenumber,\n      city: this.state.city,\n      country: this.state.country,\n      gender: this.state.gender,\n      company: this.state.company,\n      school: this.state.school,\n      hometown: this.state.hometown,\n      languages: this.state.languages,\n      about: this.state.about\n    //   ID:this.state.ID\n    };\n    \n    this.props.createProfile(profileData, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    \n    const { errors } = this.state;\n    \n    \n    // Select options for gender\n    const options = [\n      { label: '* Select Gender', value: 0 },\n      { label: 'Male', value: 'Male' },\n      { label: 'Female', value: 'Female' },\n      { label: 'Other', value: 'Other' }\n    ];\n\n    return (\n      <div className=\"create-profile\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10\">\n            </div>\n            <div className=\"col-2\">\n              <Link to=\"/dashboard\" className=\"btn btn-light\">\n                Back to Dashboard\n              </Link>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-5 m-auto\">\n              <h2 className=\"display-8 text-center\">Edit Your Profile</h2>\n              <p className=\"lead text-center\">\n                Update information about your profile\n              </p>\n            \n              <form onSubmit={this.onSubmit}>\n                \n                <SelectListGroup\n                  placeholder=\"Gender\"\n                  name=\"gender\"\n                  value={this.state.gender}\n                  onChange={this.onChange}\n                  options={options}\n                  error={errors.gender}\n                  info=\"Please Select your gender\"\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone Number\"\n                  name=\"phonenumber\"\n                  value={this.state.phonenumber}\n                  onChange={this.onChange}\n                  error={errors.phonenumber}\n                  info=\"Please enter your active phone number\"\n                />\n                <TextFieldGroup\n                  placeholder=\"City\"\n                  name=\"city\"\n                  value={this.state.city}\n                  onChange={this.onChange}\n                  error={errors.city}\n                  info=\"City or city & state suggested (eg. Boston, MA)\"\n                />\n                <TextFieldGroup\n                  placeholder=\"Country\"\n                  name=\"country\"\n                  value={this.state.country}\n                  onChange={this.onChange}\n                  error={errors.country}\n                  info=\"Enter the country (eg. USA, India)\"\n                />\n                <TextFieldGroup\n                  placeholder=\"* Languages\"\n                  name=\"languages\"\n                  value={this.state.languages}\n                  onChange={this.onChange}\n                  error={errors.languages}\n                  info=\"Please use comma separated values (eg.\n                    English, French, Spanish, Hindi)\"\n                />\n                <TextFieldGroup\n                  placeholder=\"Company\"\n                  name=\"company\"\n                  value={this.state.company}\n                  onChange={this.onChange}\n                  error={errors.company}\n                  info=\"Enter your company or profession name\"\n                />\n                <TextAreaFieldGroup\n                  placeholder=\"Short Bio\"\n                  name=\"about\"\n                  value={this.state.about}\n                  onChange={this.onChange}\n                  error={errors.about}\n                  info=\"Tell us a little about yourself\"\n                />\n                \n               \n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"btn btn-info btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nCreateProfile.propTypes = {\n  createProfile:PropTypes.func.isRequired,\n  getCurrentProfile:PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(CreateProfile));\n"]},"metadata":{},"sourceType":"module"}